name: Windows CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  windows-test:
    runs-on: windows-latest
    
    steps:
    - name: Configure git line endings
      shell: bash
      run: git config --global core.autocrlf input
      
    - uses: actions/checkout@v4

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false  # Skip update for faster installation
        path-type: inherit
        cache: true    # Cache packages between runs for speed
        release: false # Use pre-installed MSYS2 on runner
        install: >-
          mingw-w64-x86_64-gcc-fortran
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-ffmpeg
          git

    - name: Add MinGW to PATH
      run: echo C:\msys64\mingw64\bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh

    - name: Cache FPM binary (Windows)
      id: cache-fpm-win
      uses: actions/cache@v4
      with:
        path: C:\msys64\mingw64\bin\fpm.exe
        key: ${{ runner.os }}-fpm-0.12.0

    - name: Install FPM
      if: steps.cache-fpm-win.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        Write-Host "Installing FPM directly from GitHub releases..."
        Invoke-WebRequest -Uri "https://github.com/fortran-lang/fpm/releases/download/v0.12.0/fpm-0.12.0-windows-x86_64-gcc-12.exe" -OutFile "fpm.exe"
        Move-Item -Path "fpm.exe" -Destination "C:\msys64\mingw64\bin\fpm.exe"
        & "C:\msys64\mingw64\bin\fpm.exe" --version

    - name: Verify installations
      shell: cmd
      run: |
        echo === Verifying installations ===
        gfortran --version
        gcc --version
        fpm --version
        ffmpeg -version
        echo === Environment verification complete ===

    - name: Cache FPM build artifacts
      uses: actions/cache@v4
      with:
        path: |
          build
          .fpm
        key: ${{ runner.os }}-fpm-build-${{ hashFiles('fpm.toml', 'src/**/*.f90', 'src/**/*.c') }}
        restore-keys: |
          ${{ runner.os }}-fpm-build-

    - name: Build project
      shell: cmd
      run: |
        set FORTPLOT_ENABLE_FFMPEG=1
        fpm build --flag "-fPIC"

    - name: Run Windows tests
      shell: cmd
      run: |
        echo Running all tests...
        set FORTPLOT_ENABLE_FFMPEG=1
        fpm test --flag "-cpp -fmax-stack-var-size=65536"